{
	"basePath": "/",
	"consumes": [
		"application/json"
	],
	"definitions": {
		"User": {
			"properties": {
				"username": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			},
			"required": [
				"username",
				"email",
				"password"
			],
			"type": "object",
			"additionalProperties": false
		},
		"Role": {
			"enum": [
				"ADMIN",
				"USER",
				"SUPERADMIN"
			],
			"type": "string"
		},
		"doc": {
			"properties": {
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"role": {
					"$ref": "#/definitions/Role"
				}
			},
			"required": [
				"createdAt",
				"role"
			],
			"type": "object",
			"additionalProperties": false
		},
		"DocUser": {
			"type": "object",
			"properties": {
				"username": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"role": {
					"$ref": "#/definitions/Role"
				}
			}
		},
		"createResult": {
			"properties": {
				"name": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"role": {
					"$ref": "#/definitions/Role"
				}
			},
			"required": [
				"name",
				"email",
				"role"
			],
			"type": "object",
			"additionalProperties": false
		},
		"loginResult": {
			"$ref": "#/definitions/createResult"
		},
		"login": {
			"properties": {
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			},
			"required": [
				"email",
				"password"
			],
			"type": "object",
			"additionalProperties": false
		},
		"Details": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"name"
			],
			"type": "object",
			"additionalProperties": false
		}
	},
	"info": {
		"title": "",
		"contact": {}
	},
	"paths": {
		"/user/create": {
			"post": {
				"operationId": "CreateUser",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "User Object",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"consumes": [
					"application/json"
				],
				"description": "Create a new user",
				"summary": "Creates a new user",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"description": "User details like username, email, and password",
						"in": "body",
						"name": "requestBody",
						"required": true,
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				]
			}
		},
		"/user/get": {
			"get": {
				"operationId": "GetUsers",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Array of User Objects",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"500": {
						"description": "Internal Servel Error"
					}
				},
				"description": "Get all users",
				"summary": "Testing protected route example 1",
				"tags": [
					"User"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": []
			}
		},
		"/user/login": {
			"post": {
				"operationId": "LoginUser",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "User Object",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Invalid Form Data"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"consumes": [
					"application/json"
				],
				"description": "Login to the account",
				"summary": "Login",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "body",
						"name": "requestBody",
						"required": true,
						"schema": {
							"$ref": "#/definitions/login"
						}
					}
				]
			}
		},
		"/user/getall": {
			"get": {
				"operationId": "GetllUsers",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Array of User Objects",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"500": {
						"description": "Internal Servel Error"
					}
				},
				"description": "Get all users using jwt token",
				"summary": "Testing protected route example 2",
				"tags": [
					"User"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": []
			}
		},
		"/user/uploadImage": {
			"post": {
				"operationId": "UploadImage",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Image uploaded successfully",
						"schema": {
							"type": "string"
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"consumes": [
					"multipart/form-data"
				],
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "formData",
						"name": "description",
						"required": true,
						"type": "string"
					},
					{
						"in": "formData",
						"name": "file",
						"required": true,
						"type": "file"
					}
				]
			}
		},
		"/random": {
			"get": {
				"operationId": "GetUsers",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"items": {
								"$ref": "#/definitions/Details"
							},
							"type": "array"
						}
					}
				},
				"summary": "Get Sample output",
				"security": [],
				"parameters": []
			}
		}
	},
	"produces": [
		"application/json"
	],
	"swagger": "2.0",
	"securityDefinitions": {
		"BearerAuth": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header",
			"description": "JWT authorization token"
		}
	}
}